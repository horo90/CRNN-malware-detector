import PathFinder
import IndexingInstruction
import DetectionModel

def main():
    n_sampled_path = 5
    timeout = 3
    limit_len = 50

    for strategy in ['noguided', 'random', 'prob_f', 'prob_b']:
        PathFinder.run('./mal_sub', './sampled-paths', n_sampled_path, timeout, strategy, limit_len)
        IndexingInstruction.run('./sampled-paths', './indexed-paths', strategy)

    for n_sampled_path in [5, 10, 20, 30]:
        for strategy in ['noguided', 'random', 'prob_f', 'prob_b']:
            DetectionModel.run(n_sampled_path,
                               'train',
                               '.\\indexed-paths', # data root,
                               strategy,
                               '.\\model', # model path
                               True, # plot
                               5, # k fold
                               16, # encode length
                               100, # n embedding
                               1024, # n rnn hidden
                               2, # n drnn out
                               1e-3, # lr ae
                               1e-3, # lr drnn
                               10000, # n update ccnn-ae
                               10000, # n update drnn
                               10) # mini batch
                               # 20) # n z


if __name__ == '__main__':
    main()